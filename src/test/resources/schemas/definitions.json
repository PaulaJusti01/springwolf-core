a
import json
import smtplib
import os
from email.mime.text import MIMEText

SMTP_SERVER = os.environ.get("SMTP_SERVER", "smtp-relay.interno.itau")
SMTP_PORT = int(os.environ.get("SMTP_PORT", "25"))
FROM_EMAIL = os.environ.get("FROM_EMAIL", "nao-responder@itau.com.br")
TO_EMAIL = os.environ.get("TO_EMAIL", "default@itau.com.br")  # Pode ser sobrescrito por evento

def lambda_handler(event, context):
    print("Evento recebido:", json.dumps(event))

    detail = event.get("detail", {})
    status = detail.get("status", "desconhecido")
    pipeline = detail.get("pipeline", "não informado")
    message = detail.get("Message", "sem mensagem")
    to_email = detail.get("to_email", TO_EMAIL)  # Permite sobrescrever via evento

    body = f"""
Resultado da execução do pipeline: {pipeline}

Status: {status}
Mensagem: {message}
"""

    subject = f"[IU Lotus] Resultado do pipeline {pipeline}"

    msg = MIMEText(body)
    msg["Subject"] = subject
    msg["From"] = FROM_EMAIL
    msg["To"] = to_email

    try:
        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
            server.send_message(msg)
            print("E-mail enviado com sucesso")
    except Exception as e:
        print("Erro ao enviar e-mail:", str(e))

    return {
        "statusCode": 200,
        "body": json.dumps("Finalizado com sucesso")
    }
